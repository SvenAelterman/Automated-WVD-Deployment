{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "westus"
        },
        "hostPoolRgPrefix": {
            "type": "string",
            "defaultValue": "WVD-POOL-RG-"
        },
        "svcRgName": {
            "type": "string",
            "defaultValue": "WVD-SVCS-RG"
        },
        "netRgName": {
            "type": "string",
            "defaultValue": "WVD-NET-RG"
        },
        "wvdStorageAccountName": {
            "type": "string"
        },
        "wvdKeyVaultName": {
            "type": "string"
        },
        "wvdAutomationAccountName": {
            "type": "string"
        },
        "wvdLogAnalyticsWorkspaceName": {
            "type": "string"
        },
        "wvdVirtualNetworkName": {
            "type": "string"
        },
        "wvdMinHostPools": {
            "type": "int"
        }
    },
    "functions": [],
    "variables": {
        "storageAccountConfig": {
            "dscContainer": "dsc",
            "templateContainer": "templates",
            "tier": "Standard",
            "replication": "Standard_RAGRS",
            "accessTier": "Hot"
        },
        "keyVaultConfig": {
            "secretVMAdminAccount": "/WVD-VM-Admin-Account",
            "secretVMAdminPassword": "/WVD-VM-Admin-Password",
            "secretLAWorkspaceId": "/WVD-LA-WorkspaceId",
            "secretLAWorkspaceKey": "/WVD-LA-WorkspaceKey",
            "secretVMDomainJoinAccount": "/WVD-VM-DomainJoin-Account",
            "secretVMDomainJoinPassword": "/WVD-VM-DomainJoin-Password",
            "secretVMDomainJoinOU": "/WVD-SessionHost-OU"
        },
        "virtualNetworkConfig": {
            "addressSpace": "192.168.0.0/16",
            "subnetCount": 2,
            "subnetPrefix": "WVD-Subnet-"
        }
    },
    "resources": [
        // Creates SVCS Resource Group
        {
            "name": "[parameters('svcRgName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "properties": {
                "description": "Resource Group for Services / Resources that support the Windows Virtual Desktop environment"
            }
        },
        // Creates NET Resource Group
        {
            "name": "[parameters('netRgName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "properties": {
                "description": "Resource Group for Virtual Network Resources that support the Windows Virtual Desktop environment"
            }
        },
        // Creates Host Pool Resource Group(s) based on wvdMinHostPools
        {
            "name": "[concat(parameters('hostPoolRgPrefix'),padleft(add(copyIndex(),1),2,'0'))]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "copy": {
                "name": "Pool-Rgs",
                "count": "[parameters('wvdMinHostPools')]"
            },
            "properties": {
                "description": "Resource Group for Windows Virtual Desktop Host Pool(s) and supporting Resources"
            }
        },
        // Resource Group deployment for SVCS resources, depends on SVCS RG
        {
            "name": "Create-Services-Resources",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "resourceGroup": "[parameters('svcRgName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        // Creates minimum storage account for wvd artifacts with 2 containers
                        {
                            "name": "[parameters('wvdStorageAccountName')]",
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2019-06-01",
                            "location": "[resourceGroup().location]",
                            "kind": "StorageV2",
                            "sku": {
                                "name": "[variables('storageAccountConfig').replication]",
                                "tier": "[variables('storageAccountConfig').tier]"
                            },
                            "resources": [
                                {
                                    "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                                    "apiVersion": "2019-06-01",
                                    "name": "[concat('default/',variables('storageAccountConfig').dscContainer)]",
                                    "dependsOn": [
                                        "[parameters('wvdStorageAccountName')]"
                                    ]
                                },
                                {
                                    "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                                    "apiVersion": "2019-06-01",
                                    "name": "[concat('default/',variables('storageAccountConfig').templateContainer)]",
                                    "dependsOn": [
                                        "[parameters('wvdStorageAccountName')]"
                                    ]
                                }
                            ],
                            "properties": {
                                "accessTier": "[variables('storageAccountConfig').accessTier]"
                            }
                        },
                        // Creates a Key Vault used for storing secrets needed during deployment
                        {
                            "name": "[parameters('wvdKeyVaultName')]",
                            "type": "Microsoft.KeyVault/vaults",
                            "apiVersion": "2016-10-01",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "enabledForDeployment": true,
                                "enabledForTemplateDeployment": true,
                                "enabledForDiskEncryption": false,
                                "tenantId": "[subscription().tenantId]",
                                "accessPolicies": [
                                    {
                                        "tenantId": "tenantId",
                                        "objectId": "objectId",
                                        "permissions": {
                                            "keys": [
                                                "Get"
                                            ],
                                            "secrets": [
                                                "List",
                                                "Get",
                                                "Set"
                                            ]
                                        }
                                    }
                                ],
                                "sku": {
                                    "name": "standard",
                                    "family": "A"
                                }
                            },
                            "resources": [
                                // Key Vault Secrets
                                {
                                    "type": "Microsoft.KeyVault/vaults/secrets",
                                    "name": "[concat(parameters('wvdKeyVaultName'),variables('keyVaultConfig').secretVMAdminAccount)]",
                                    "apiVersion": "2016-10-01",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('wvdKeyVaultName'))]"
                                    ],
                                    "properties": {
                                        "contentType": "Local Admin Account name for VM(s)",
                                        "attributes": {
                                            "enabled": true
                                        }
                                    }
                                },
                                {
                                    "type": "Microsoft.KeyVault/vaults/secrets",
                                    "name": "[concat(parameters('wvdKeyVaultName'),variables('keyVaultConfig').secretVMAdminPassword)]",
                                    "apiVersion": "2016-10-01",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('wvdKeyVaultName'))]"
                                    ],
                                    "properties": {
                                        "contentType": "Local Admin Account password for VM(s)",
                                        "attributes": {
                                            "enabled": true
                                        }
                                    }
                                },
                                {
                                    "type": "Microsoft.KeyVault/vaults/secrets",
                                    "name": "[concat(parameters('wvdKeyVaultName'),variables('keyVaultConfig').secretVMDomainJoinAccount)]",
                                    "apiVersion": "2016-10-01",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('wvdKeyVaultName'))]"
                                    ],
                                    "properties": {
                                        "contentType": "Domain Join Account UPN for VM(s)",
                                        "attributes": {
                                            "enabled": true
                                        }
                                    }
                                },
                                {
                                    "type": "Microsoft.KeyVault/vaults/secrets",
                                    "name": "[concat(parameters('wvdKeyVaultName'),variables('keyVaultConfig').secretVMDomainJoinPassword)]",
                                    "apiVersion": "2016-10-01",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('wvdKeyVaultName'))]"
                                    ],
                                    "properties": {
                                        "contentType": "Domain Join Account password for VM(s)",
                                        "attributes": {
                                            "enabled": true
                                        }
                                    }
                                },
                                {
                                    "type": "Microsoft.KeyVault/vaults/secrets",
                                    "name": "[concat(parameters('wvdKeyVaultName'),variables('keyVaultConfig').secretVMDomainJoinOU)]",
                                    "apiVersion": "2016-10-01",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('wvdKeyVaultName'))]"
                                    ],
                                    "properties": {
                                        "contentType": "Organizational Unit for Session Host Computer Accounts during Domain Join",
                                        "attributes": {
                                            "enabled": true
                                        }
                                    }
                                },
                                {
                                    "type": "Microsoft.KeyVault/vaults/secrets",
                                    "name": "[concat(parameters('wvdKeyVaultName'),variables('keyVaultConfig').secretLAWorkspaceId)]",
                                    "apiVersion": "2016-10-01",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('wvdKeyVaultName'))]"
                                    ],
                                    "properties": {
                                        "contentType": "Primary Log Analytics Workspace Id",
                                        "attributes": {
                                            "enabled": true
                                        }
                                    }
                                },
                                {
                                    "type": "Microsoft.KeyVault/vaults/secrets",
                                    "name": "[concat(parameters('wvdKeyVaultName'),variables('keyVaultConfig').secretLAWorkspaceKey)]",
                                    "apiVersion": "2016-10-01",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('wvdKeyVaultName'))]"
                                    ],
                                    "properties": {
                                        "contentType": "Primary Log Analytics Workspace Key",
                                        "attributes": {
                                            "enabled": true
                                        }
                                    }
                                }
                            ]
                        },
                        // Creates Automation Account needed for Dynamic Scaling runbooks
                        {
                            "name": "[parameters('wvdAutomationAccountName')]",
                            "type": "Microsoft.Automation/automationAccounts",
                            "apiVersion": "2015-10-31",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "sku": {
                                    "name": "Basic"
                                }
                            }
                        },
                        // Creates Log Analytics Workspace
                        {
                            "name": "[parameters('wvdLogAnalyticsWorkspaceName')]",
                            "type": "Microsoft.OperationalInsights/workspaces",
                            "apiVersion": "2015-11-01-preview",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "sku": {
                                    "name": "PerGB2018"
                                },
                                "features": {
                                    "searchVersion": 1
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('svcRgName'))]"
            ]
        },
        // Resource Group deployment for NET resources, depends on NET RG
        {
            "name": "Create-Network-Resources",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "resourceGroup": "[parameters('netRgName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[parameters('wvdVirtualNetworkName')]",
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2019-11-01",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[variables('virtualNetworkConfig').addressSpace]"
                                    ]
                                }
                            },
                            "resources": [
                                {
                                    "type": "Microsoft.Network/virtualNetworks/subnets",
                                    "apiVersion": "2020-05-01",
                                    "location": "[resourceGroup().location]",
                                    "name": "[concat(variables('virtualNetworkConfig').subnetPrefix,padLeft(add(copyIndex(),1),2,'0'))]",
                                    "copy": {
                                        "name": "SubnetCopy",
                                        "count": "[variables('virtualNetworkConfig').subnetCount]"
                                    },
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Network/virtualNetworks',parameters('wvdVirtualNetworkName'))]"
                                    ],
                                    "properties": {
                                        "addressPrefix": "[concat('192.168.',add(copyIndex(),1),'.0/24')]"
                                    }
                                }
                            ]
                        }
                    ],
                    "outputs": {}
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('netRgName'))]"
            ]
        }
    ],
    "outputs": {}
}